openapi: 3.0.3
info:
  title: Swagger Nghich - OpenAPI 3.0
  description: |-
    API for Nghich Project
  version: 1.0.11

servers:
  - url: http://localhost:8080
tags:
  - name: users
    description: API cho Users
paths:
  /users/login:
    post:
      tags:
        - users
      summary: Logs user into the system
      operationId: login
      requestBody:
        description: The user that needs to be logged in
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBody"
        required: true
      responses:
        "200":
          description: Login Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login Successfully
                  result:
                    $ref: "#/components/schemas/SuccessAuthentication"
        "422":
          description: Invalid input
  /users/register:
    post:
      tags:
        - users
      summary: Register user
      operationId: register
      requestBody:
        description: The user that needs to be registered
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterBody"
        required: true
      responses:
        "200":
          description: Register Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Register Successfully
                  result:
                    $ref: "#/components/schemas/SuccessAuthentication"
        "422":
          description: Invalid input
  /users/logout:
    post:
      tags:
        - users
      summary: Logs out current logged in user session
      operationId: logout
      security:
        - BearerAuth: []
      requestBody:
        description: The user that needs to be logged out
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogoutBody"
        required: true
      responses:
        "200":
          description: Logout Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logout Successfully
        "422":
          description: Invalid input
  /users/change-password:
    post:
      tags:
        - users
      summary: Change password
      operationId: changePassword
      security:
        - BearerAuth: []
      requestBody:
        description: The user that needs to change password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordBody"
        required: true
      responses:
        "200":
          description: Change Password Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Change Password Successfully
        "422":
          description: Invalid input
  /users/profile:
    get:
      tags:
        - users
      summary: Get user profile
      operationId: getProfile
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Get Profile Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get Profile Successfully
                  result:
                    $ref: "#/components/schemas/UserProfile"
        "422":
          description: Invalid input
    patch:
      tags:
        - users
      summary: Update user profile
      operationId: updateProfile
      security:
        - BearerAuth: []
      requestBody:
        description: The user that needs to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileBody"
        required: true
      responses:
        "200":
          description: Update Profile Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Update Profile Successfully
                  result:
                    $ref: "#/components/schemas/UserProfile"
        "422":
          description: Invalid input

  /users/profile/{username}:
    get:
      tags:
        - users
      summary: Get a user by ID
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: String username of the user to get
      responses:
        "200":
          description: Get Profile Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get Profile Successfully
                  result:
                    $ref: "#/components/schemas/UserProfile"
        "422":
          description: Invalid input
  # Remove the duplicate key "/users/profile"
